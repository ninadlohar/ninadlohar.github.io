{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/countries/countries.component.css","webpack:///./src/app/components/countries/countries.component.html","webpack:///./src/app/components/countries/countries.component.ts","webpack:///./src/app/components/regions/regions.component.css","webpack:///./src/app/components/regions/regions.component.html","webpack:///./src/app/components/regions/regions.component.ts","webpack:///./src/app/components/single-country/single-country.component.css","webpack:///./src/app/components/single-country/single-country.component.html","webpack:///./src/app/components/single-country/single-country.component.ts","webpack:///./src/app/services/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACM;AACA;AACS;AACsC;AACd;AACN;AACpB;AACyB;AAqB/E;IAAA;IAAyB,CAAC;IAAb,SAAS;QApBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,0GAAsB;gBACtB,4FAAkB;gBAClB,sFAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC;oBACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sFAAgB,EAAE,SAAS,EAAE,MAAM,EAAE;oBAC5D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,4FAAkB,EAAE;oBACzD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,0GAAsB,EAAE;iBAChE,CAAC;aACH;YACD,SAAS,EAAE,CAAC,kEAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC9BtB,+BAA+B,yBAAyB,KAAK,eAAe,8BAA8B,yBAAyB,8BAA8B,KAAK,eAAe,wBAAwB,oBAAoB,qBAAqB,gCAAgC,KAAK,oBAAoB,wBAAwB,KAAK,sBAAsB,qBAAqB,KAAK,eAAe,mBAAmB,oBAAoB,KAAK,oBAAoB,+BAA+B,KAAK,iBAAiB,gCAAgC,qBAAqB,kBAAkB,mBAAmB,sBAAsB,4BAA4B,sBAAsB,0BAA0B,KAAK,qBAAqB,K;;;;;;;;;;;ACAttB,qKAAqK,sBAAsB,GAAG,kBAAkB,oWAAoW,cAAc,sGAAsG,gBAAgB,mHAAmH,qGAAqG,4BAA4B,KAAK,eAAe,OAAO,kBAAkB,wIAAwI,qGAAqG,gCAAgC,KAAK,eAAe,OAAO,kBAAkB,wO;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjuC;AACQ;AACD;AAOzD;IAQE,4BAAoB,KAAqB,EAAU,OAAe,EAAU,IAAiB;QAA7F,iBAAkG;QAA9E,UAAK,GAAL,KAAK,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QANtF,cAAS,GAAU,EAAE,CAAC;QAEtB,mBAAc,GAAG,KAAK,CAAC;QACvB,mBAAc,GAAG,KAAK,CAAC;QACvB,WAAM,GAAG,cAAc,CAAC;QASxB,eAAU,GAAG;YAClB,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACzD,KAAI,CAAC,EAAE,GAAG,KAAI,CAAC,MAAM,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YACzB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACpB,KAAK,MAAM,EAAE,CAAC;wBACZ,KAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;wBAClC,MAAM,CAAC;oBACT,CAAC;oBACD,KAAK,QAAQ,EAAE,CAAC;wBACd,KAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;wBACpC,MAAM,CAAC;oBACT,CAAC;oBACD,KAAK,UAAU,EAAE,CAAC;wBAChB,KAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;wBACtC,MAAM,CAAC;oBACT,CAAC;oBACD,KAAK,QAAQ,EAAE,CAAC;wBACd,KAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;wBACpC,MAAM,CAAC;oBACT,CAAC;oBACD,KAAK,OAAO,EAAE,CAAC;wBACb,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;wBACnC,MAAM,CAAC;oBACT,CAAC;oBACD,KAAK,SAAS,EAAE,CAAC;wBACf,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;wBACrC,MAAM,CAAC;oBACT,CAAC;oBACD,SAAS,CAAC;wBACR,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QAED,yBAAoB,GAAG,UAAC,UAAkB;YACxC,KAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC;iBACvC,SAAS,CAAC,UAAC,QAAQ;gBAClB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC5B,CAAC,CAAC,CAAC;QACP,CAAC;QACM,kBAAa,GAAG,UAAC,IAAI;YAC1B,KAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;iBACnC,SAAS,CAAC,UAAC,WAAkB;gBAC5B,KAAI,CAAC,SAAS,GAAG,WAAW,CAAC;YAC/B,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,kBAAa,GAAG,UAAC,GAAG;YACzB,KAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC;iBAClC,SAAS,CAAC,UAAC,WAAkB;gBAC5B,KAAI,CAAC,SAAS,GAAG,WAAW,CAAC;YAC/B,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,oBAAe,GAAG;YACvB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,WAAW;iBACnC,SAAS,CAAC,UAAC,GAAG;gBACb,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAEpB,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;gBACtC,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAE3B,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;gBACtC,CAAC;gBAAC,IAAI,CAAC,CAAC;gBAER,CAAC;YACH,CAAC,CAAC,CAAC;QACP,CAAC;IA7EgG,CAAC;IAElG,qCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAbU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAS2B,8DAAc,EAAmB,sDAAM,EAAgB,kEAAW;OARlF,kBAAkB,CAuF9B;IAAD,yBAAC;CAAA;AAvF8B;;;;;;;;;;;;ACT/B,2BAA2B,oBAAoB,uBAAuB,oBAAoB,KAAK,kBAAkB,oBAAoB,6BAA6B,KAAK,cAAc,yBAAyB,KAAK,WAAW,qBAAqB,mBAAmB,uBAAuB,yBAAyB,mCAAmC,QAAQ,YAAY,6BAA6B,KAAK,WAAW,6BAA6B,sBAAsB,KAAK,0BAA0B,yCAAyC,6BAA6B,kBAAkB,mBAAmB,yBAAyB,KAAK,K;;;;;;;;;;;ACArnB,qMAAqM,sBAAsB,mJ;;;;;;;;;;;;;;;;;;;;;;;;ACAzK;AAQlD;IAKE;QAEE,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IAC9E,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IAXU,gBAAgB;QAN5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OAEW,gBAAgB,CAa5B;IAAD,uBAAC;CAAA;AAb4B;;;;;;;;;;;;ACR7B,qBAAqB,sBAAsB,KAAK,iBAAiB,cAAc,2BAA2B,KAAK,K;;;;;;;;;;;ACA/G,sJAAsJ,uBAAuB,uHAAuH,8DAA8D,2BAA2B,sIAAsI,sBAAsB,gHAAgH,yBAAyB,+GAA+G,wBAAwB,mHAAmH,2BAA2B,oHAAoH,2BAA2B,+GAA+G,4BAA4B,wGAAwG,yBAAyB,2KAA2K,eAAe,4LAA4L,iBAAiB,4GAA4G,2BAA2B,8KAA8K,WAAW,+LAA+L,iBAAiB,kF;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvrE;AACO;AACC;AACf;AAM3C;IAIE,gCAAoB,IAAiB,EAC3B,KAAqB,EACrB,MAAc,EACd,QAAkB;QAH5B,iBAGiC;QAHb,SAAI,GAAJ,IAAI,CAAa;QAC3B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAJrB,cAAS,GAAU,EAAE,CAAC;QAatB,yBAAoB,GAAG;YAC5B,8DAA8D;YAC9D,KAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,OAAO,CAAC;iBACrC,SAAS,CAAC,UAAC,WAAW;gBACrB,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YACjC,CAAC,EAAE,UAAC,KAAK;gBACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACP,CAAC;IAjB+B,CAAC;IAEjC,yCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,WAAW;YACtC,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;YACnC,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAYD,uCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IA5BU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAK0B,kEAAW;YACpB,8DAAc;YACb,sDAAM;YACJ,wDAAQ;OAPjB,sBAAsB,CA8BlC;IAAD,6BAAC;CAAA;AA9BkC;;;;;;;;;;;;;;;;;;;;;;;;;;ACTQ;AACO;AAMlD;IAGE,qBAAoB,IAAgB;QAApC,iBAAyC;QAArB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,kCAAkC,CAAC;QAI1C,yBAAoB,GAAG,UAAC,UAAkB;YAC/C,IAAM,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,GAAG,CAAI,KAAI,CAAC,GAAG,gBAAW,UAAY,CAAC,CAAC;YACnE,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC;QAEM,qBAAgB,GAAG,UAAC,OAAe;YACxC,IAAM,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,GAAG,CAAI,KAAI,CAAC,GAAG,cAAS,OAAO,mBAAgB,CAAC,CAAC;YAC5E,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC;QAEM,2BAAsB,GAAG,UAAC,QAAQ;YACvC,IAAM,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,GAAG,CAAI,KAAI,CAAC,GAAG,kBAAa,QAAU,CAAC,CAAC;YACnE,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC;QAED,2BAAsB,GAAG,UAAC,IAAI;YAC5B,IAAM,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,GAAG,CAAI,KAAI,CAAC,GAAG,cAAS,IAAM,CAAC,CAAC;YAC3D,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC;IApBuC,CAAC;IAH9B,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,+DAAU;OAHzB,WAAW,CAyBvB;IAAD,kBAAC;CAAA;AAzBuB;;;;;;;;;;;;;;ACPxB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SingleCountryComponent } from './components/single-country/single-country.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { RegionsComponent } from './components/regions/regions.component';\nimport { HttpService } from './services/http.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n@NgModule({\n  declarations: [\n    AppComponent,\n    SingleCountryComponent,\n    CountriesComponent,\n    RegionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: '', component: RegionsComponent, pathMatch: 'full' },\n      { path: 'region/:region', component: CountriesComponent },\n      { path: 'country/:country', component: SingleCountryComponent }\n    ])\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".card-title {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  border: 2px solid black;\\r\\n  border-radius: 0px;\\r\\n  height: 100% !important;\\r\\n}\\r\\n\\r\\n.page {\\r\\n  display: absolute;\\r\\n  height: 100vh;\\r\\n  overflow: auto;\\r\\n  background-color: #e7e7e7;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  padding-top: 50px;\\r\\n}\\r\\n\\r\\n.card-border {\\r\\n  margin: 20px 0;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  margin: 10px;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  padding: 15px !important;\\r\\n}\\r\\n\\r\\n.header {\\r\\n  background-color: #04192E;\\r\\n  display: block;\\r\\n  padding: 3%;\\r\\n  color: white;\\r\\n  font-size: 26px;\\r\\n  font-family: 'Roboto';\\r\\n  font-size: 2rem;\\r\\n  letter-spacing: 2px;\\r\\n}\\r\\n\\r\\n.container {}\\r\\n\"","module.exports = \"<div class=\\\"page\\\">\\n  <div class=\\\"row header\\\" style=\\\"text-align: center\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <a style=\\\"color: white\\\"> {{ header | uppercase }} {{ cn | uppercase }}</a>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container\\\" style=\\\"text-align: center\\\">\\n    <div class=\\\"row\\\" style=\\\"text-align: center\\\">\\n      <div *ngFor=\\\"let country of countries\\\" class=\\\"col-lg-3 col-md-4 col-sm-6 col-12 card-border\\\">\\n        <div class=\\\"card text-center\\\" style=\\\"width: 14rem\\\">\\n          <img class=\\\"card-img-top\\\" src={{country.flag}} alt=\\\"country flag\\\" />\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">{{ country.name }}</h5>\\n            <div>\\n              Currency:\\n              <span *ngFor=\\\"let currency of country.currencies; let i = last\\\">\\n                <a [routerLink]=\\\"['/region/' + country.region]\\\" [queryParams]=\\\"{ 'currency' : currency.code}\\\">{{currency.name}} </a>{{i ? \\\"\\\" : \\\",\\\"}} </span>\\n            </div>\\n            <div>\\n              Language\\n              <span *ngFor=\\\"let language of country.languages; let i = last\\\">\\n                <a [routerLink]=\\\"['/region/' + country.region]\\\" [queryParams]=\\\"{ 'language' : language.iso639_1}\\\">{{language.name}} </a>{{i ? \\\"\\\" : \\\",\\\"}} </span>\\n            </div>\\n            <button [routerLink]=\\\"['/country', country.name]\\\" class=\\\"btn btn-primary btn-block\\\">More Details</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n  public region: string;\n  public countries: any[] = [];\n  public currency;\n  public currencyFilter = false;\n  public languageFilter = false;\n  public header = 'Countries In';\n  public cn: string;\n  constructor(private route: ActivatedRoute, private routers: Router, private http: HttpService) { }\n\n  ngOnInit() {\n    this.getByCurAndLang();\n    this.getAllData();\n  }\n\n  public getAllData = () => {\n    this.region = this.route.snapshot.paramMap.get('region');\n    this.cn = this.region;\n    console.log(this.region);\n    if (this.region) {\n      switch (this.region) {\n        case 'asia': {\n          this.getCountriesByRegion('asia');\n          return;\n        }\n        case 'africa': {\n          this.getCountriesByRegion('africa');\n          return;\n        }\n        case 'americas': {\n          this.getCountriesByRegion('americas');\n          return;\n        }\n        case 'europe': {\n          this.getCountriesByRegion('europe');\n          return;\n        }\n        case 'polar': {\n          this.getCountriesByRegion('polar');\n          return;\n        }\n        case 'oceania': {\n          this.getCountriesByRegion('oceania');\n          return;\n        }\n        default: {\n          this.routers.navigate(['/']);\n        }\n      }\n    }\n  }\n\n  getCountriesByRegion = (regionName: string) => {\n    this.http.getCountriesByRegion(regionName)\n      .subscribe((response) => {\n        this.countries = response;\n      });\n  }\n  public getByLanguage = (lang) => {\n    this.http.getCountriesByLanguage(lang)\n      .subscribe((apiResponse: any[]) => {\n        this.countries = apiResponse;\n      });\n  }\n\n  public getByCurrency = (cur) => {\n    this.http.getCountriesByCurrency(cur)\n      .subscribe((apiResponse: any[]) => {\n        this.countries = apiResponse;\n      });\n  }\n\n  public getByCurAndLang = () => {\n    this.currency = this.route.queryParams\n      .subscribe((res) => {\n        if (res['currency']) {\n\n          this.getByCurrency(res['currency']);\n        } else if (res['language']) {\n\n          this.getByLanguage(res['language']);\n        } else {\n\n        }\n      });\n  }\n\n}\n","module.exports = \".blocks {\\r\\n  padding: 2rem;\\r\\n  overflow: hidden;\\r\\n  padding: 1rem;\\r\\n}\\r\\n\\r\\n.gapping {\\r\\n  padding: 1rem;\\r\\n  background-image: none;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n  border-radius: 0px;\\r\\n}\\r\\n\\r\\n* {\\r\\n  /* width: 100%;\\r\\n  height: 100%;\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n  background-repeat: no-repeat; */\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  font-family: 'Raleway';\\r\\n}\\r\\n\\r\\na {\\r\\n  font-family: 'Raleway';\\r\\n  font-size: 20px;\\r\\n}\\r\\n\\r\\n.container-fluid {\\r\\n  background-image: url('beach.jpg');\\r\\n  background-size: cover;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  position: absolute;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <div *ngFor=\\\"let region of regions\\\" style=\\\"text-align: center\\\">\\n    <div class=\\\"gapping\\\">\\n      <div class=\\\"blocks\\\">\\n        <h2>{{ region | uppercase }}</h2>\\n        <a [routerLink]=\\\"['/region', region]\\\" class=\\\"btn btn-primary\\\">See Countries</a>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-regions',\n  templateUrl: './regions.component.html',\n  styleUrls: ['./regions.component.css'],\n})\n\nexport class RegionsComponent implements OnInit {\n  public regions: string[];\n  public selectedRegion: string;\n  private listState: string;\n\n  constructor() {\n\n    this.regions = ['asia', 'americas', 'africa', 'europe', 'oceania', 'polar'];\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"* {\\r\\n  font-size: 24px;\\r\\n}\\r\\n\\r\\n.blogs {}\\r\\n\\r\\nbody {\\r\\n  font-family: 'Karla';\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"countryInfo\\\">\\n  <div class=\\\"w-100 h-100 d-flex justify-content-center align-items-center cover\\\">\\n    <img src=\\\"{{ countryInfo[0].flag }}\\\" class=\\\"w-60 h-60\\\">\\n  </div>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\" style=\\\"padding-top: 40px;\\\">\\n      <div class=\\\"col-md-4\\\" style=\\\"text-align: center; background-color: #efefef; padding: 0px! important\\\">\\n        <div>\\n          <div class=\\\"blogs\\\">\\n            <span>\\n              <b>Country Name:</b> {{ countryInfo[0].name}}</span>\\n          </div>\\n          <div class=\\\"blogs\\\">\\n            <span>\\n              <b>Capital:</b> {{ countryInfo[0].capital}}</span>\\n          </div>\\n          <div class=\\\"blogs\\\">\\n            <span>\\n              <b>Region:</b> {{ countryInfo[0].region}}</span>\\n          </div>\\n          <div class=\\\"blogs\\\">\\n            <span>\\n              <b>Sub Region:</b> {{ countryInfo[0].subregion}}</span>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\" style=\\\"text-align: center; background-color: #efefef; padding: 0px! important\\\">\\n        <div class=\\\"blogs\\\">\\n          <span>\\n            <b>Population:</b> {{ countryInfo[0].population}}</span>\\n        </div>\\n        <div class=\\\"blogs\\\">\\n          <span>\\n            <b>Demonym:</b> {{ countryInfo[0].demonym}}</span>\\n        </div>\\n        <div class=\\\"blogs\\\">\\n          <b>Currencies:</b>\\n          <span *ngFor=\\\"let currency of countryInfo[0].currencies\\\">\\n            {{currency.name}}\\n          </span>\\n        </div>\\n        <div class=\\\"blogs\\\">\\n          <b>Currency Symbol:</b>\\n          <span *ngFor=\\\"let currency of countryInfo[0].currencies\\\">\\n            {{currency.symbol}}\\n          </span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\" style=\\\"text-align: center; background-color: #efefef; padding: 0px! important\\\">\\n        <div class=\\\"blogs\\\">\\n          <b>Local Language:</b>\\n          <span *ngFor=\\\"let lang of countryInfo[0].languages\\\">\\n            {{lang.name}}\\n          </span>\\n        </div>\\n        <div class=\\\"blogs\\\">\\n          <b>Language also called as:</b>\\n          <span *ngFor=\\\"let lang of countryInfo[0].languages\\\">\\n            {{lang.nativeName}}\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpService } from '../../services/http.service';\nimport { Location } from '@angular/common';\n@Component({\n  selector: 'app-single-country',\n  templateUrl: './single-country.component.html',\n  styleUrls: ['./single-country.component.css']\n})\nexport class SingleCountryComponent implements OnInit {\n  public country: string;\n  public countryInfo;\n  public countries: any[] = [];\n  constructor(private http: HttpService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((apiResponse) => {\n      this.country = apiResponse.country;\n      this.getSingleCountryInfo();\n    });\n  }\n\n  public getSingleCountryInfo = () => {\n    // this.country = this.route.snapshot.paramMap.get('country');\n    this.http.getSingleCountry(this.country)\n      .subscribe((apiResponse) => {\n        this.countryInfo = apiResponse;\n      }, (error) => {\n        console.log(error.errorMessage);\n      });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  private url = 'https://restcountries.eu/rest/v2';\n\n  constructor(private http: HttpClient) { }\n\n  public getCountriesByRegion = (regionName: string): Observable<any> => {\n    const response = this.http.get(`${this.url}/region/${regionName}`);\n    return response;\n  }\n\n  public getSingleCountry = (country: string) => {\n    const response = this.http.get(`${this.url}/name/${country}?fullText=true`);\n    return response;\n  }\n\n  public getCountriesByCurrency = (currency) => {\n    const response = this.http.get(`${this.url}/currency/${currency}`);\n    return response;\n  }\n\n  getCountriesByLanguage = (lang) => {\n    const response = this.http.get(`${this.url}/lang/${lang}`);\n    return response;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}